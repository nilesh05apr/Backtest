name: Check
on:
  push:
    branches:
      - main
  pull_request:
    types: [ready_for_review]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest]
        python-version: [ '3.8', '3.9', '3.10' ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Python version
        run: python -c "import sys; print(sys.version)"

      # Install pipenv
      - name: Install pipenv
        run: python3 -m pip install --upgrade pipenv

      # create .venv folder
      - name: create .venv folder
        run: mkdir -p .venv

      # caching dependencies
      - name: Caching Dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: .venv
          key: ${{ matrix.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      # install dependencies
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          pipenv install --dev --verbose
          pipenv install types-requests --dev
      # run main file
      - name: run main script
        run: |
          pipenv shell
          python3 main.py